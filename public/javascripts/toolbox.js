// Generated by CoffeeScript 1.10.0

/*
See http://www.greensock.com/draggable/ for details. 
This demo uses ThrowPropsPlugin which is a membership benefit of Club GreenSock, http://www.greensock.com/club/
 */

(function() {
  var $container, $liveSnap, $snap, applySnap, gridColumns, gridHeight, gridRows, gridWidth, i, update, x, y;

  $snap = $('#snap');

  $liveSnap = $('#liveSnap');

  $container = $('#container');

  gridWidth = 196;

  gridHeight = 100;

  gridRows = 6;

  gridColumns = 5;

  i = void 0;

  x = void 0;

  y = void 0;

  update = function() {
    var liveSnap, snap;
    snap = $snap.prop('checked');
    liveSnap = $liveSnap.prop('checked');
    Draggable.create('.box', {
      bounds: $container,
      edgeResistance: 0.65,
      type: 'x,y',
      throwProps: true,
      autoScroll: true,
      liveSnap: liveSnap,
      snap: {
        x: function(endValue) {
          if (snap || liveSnap) {
            return Math.round(endValue / gridWidth) * gridWidth;
          } else {
            return endValue;
          }
        },
        y: function(endValue) {
          if (snap || liveSnap) {
            return Math.round(endValue / gridHeight) * gridHeight;
          } else {
            return endValue;
          }
        }
      }
    });
  };

  applySnap = function() {
    if ($snap.prop('checked') || $liveSnap.prop('checked')) {
      $('.box').each(function(index, element) {
        TweenLite.to(element, 0.5, {
          x: Math.round(element._gsTransform.x / gridWidth) * gridWidth,
          y: Math.round(element._gsTransform.y / gridHeight) * gridHeight,
          delay: 0.1,
          ease: Power2.easeInOut
        });
      });
    }
    update();
  };

  i = 0;

  while (i < gridRows * gridColumns) {
    y = Math.floor(i / gridColumns) * gridHeight;
    x = i * gridWidth % gridColumns * gridWidth;
    $('<div/>').css({
      position: 'absolute',
      border: '1px solid #454545',
      width: gridWidth - 1,
      height: gridHeight - 1,
      top: y,
      left: x
    }).prependTo($container);
    i++;
  }

  TweenLite.set($container, {
    height: gridRows * gridHeight + 1,
    width: gridColumns * gridWidth + 1
  });

  TweenLite.set('.box', {
    width: gridWidth,
    height: gridHeight,
    lineHeight: gridHeight + 'px'
  });

  $snap.on('change', applySnap);

  $liveSnap.on('change', applySnap);

  update();

}).call(this);

//# sourceMappingURL=toolbox.js.map
